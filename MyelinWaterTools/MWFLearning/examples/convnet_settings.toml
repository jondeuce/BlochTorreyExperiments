prec    = 32
gpu     = false
dir     = "."

[data]
train_data  = "./train"
test_data   = "./test"
batch_size  = 75
test_size   = "auto"
height      = "auto"
channels    = 1 # Number of data channels
# labels      = ["mwf", "iewf", "T2iew", "T2mw"] # Target labels
# weights     = [1.0, 1.0, 1.0, 1.0] # Weights for loss function
labels      = ["mwf", "iewf", "T2iew", "T2mw", "K"] # Target labels
weights     = [1.0, 1.0, 1.0, 1.0, 1.0] # Weights for loss function
# labels      = ["mwf", "iewf", "T2iew", "T2mw", "K", "Dav"] # Target labels
# weights     = [1.0, 1.0, 1.0, 1.0, 1.0, 1.0] # Weights for loss function
[data.preprocess]
SNR         = [0.0] # Additive random noise
[data.preprocess.peel]
biexp       = true # peel before applying wavelet
makefrac    = true # convert component magnitudes to fractions
TEfast      = 0.015 # Threshold for fast decay mode
periodic    = false # subtract linear term to make signal periodic
[data.preprocess.wavelet]
apply       = false # Apply wavelet preprocessing
nterms      = 16 # number of terms to keep
[data.preprocess.ilaplace]
apply       = true # Apply ilaplace preprocessing
T2Range     = [0.001, 2.0] # T2 distribution range
nT2         = 40 # Number of exponentials in T2 distribution
alpha       = 0.001 # Tikhonov regularization parameter
[data.preprocess.PCA]
apply       = false # Apply PCA preprocessing

[plot]
# scale     = [100.0, 100.0, 1000.0, 1000.0] # scale labels before plotting
# units     = ["%", "%", "ms", "ms"] # label units, after scaling
scale     = [100.0, 100.0, 1000.0, 1000.0, 1.0] # scale labels before plotting
units     = ["%", "%", "ms", "ms", "um/s"] # label units, after scaling
# scale     = [100.0, 100.0, 1000.0, 1000.0, 1.0, 1.0] # scale labels before plotting
# units     = ["%", "%", "ms", "ms", "um/s", "um^2/s"] # label units, after scaling

[model]
name      = "DenseConvResNet"
loss      = "l2"
acc       = "rmse"
act       = "leakyrelu"
Nout      = 5 # number of output labels
# Nout      = 6 # number of output labels
# dropout   = false
# softmax   = false
# batchnorm = true
scale     = "auto"
# Nf        = [4, 8, 8] # num features for conv layers
# Nd        = [25, 25, 25, 25, 25]
# Npool     = 3 # pooling size
# Nkern     = 5 # kernel size
[model.resnet]
dropout   = false
batchnorm = false
groupnorm = true
Nkern     = 3 # kernel size
Nconv     = 2 # num conv layers per residual connection
Nfeat     = 8 # num features for conv layers
Nblock    = 3 # Number of residual blocks

[optimizer]
epochs  = 1000
savemod = 1
testmod = 1
[optimizer.ADAM]
lr      = 0.001
beta    = [0.9, 0.999]